name: Validate & Release

on:
  push:
    tags:
      - "v*"
    branches:    
      - 'main'  
    paths-ignore:
      - "**/README.md"

  pull_request:
    branches: [main]
    paths-ignore:
      - "**/README.md"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  CARGO_TERM_COLOR: always

jobs:
  build-test:
    uses: infinity-swap/ci-wf/.github/workflows/build-n-test.yml@main
    with:
      container-image: ghcr.io/infinity-swap/ic-dev-full:rust1.65-dfx0.11-rc-2022-09-30
      enable-target-cache: true
      audit-allow-warnings: true
      skip-test: ${{ github.ref_type == 'tag' }}
      test-script: |
        ./scripts/build.sh
        cargo llvm-cov --all-features --workspace --lcov --output-path .artifact/lcov.info

      output-artifact: artifact-is20
      artifact-script: |
        cargo build --target wasm32-unknown-unknown -p is20-token-canister --features export-api --release
        ic-cdk-optimizer target/wasm32-unknown-unknown/release/is20-token-canister.wasm -o .artifact/is20-token.wasm

        cargo build --target wasm32-unknown-unknown -p token-factory --features export-api --release
        ic-cdk-optimizer target/wasm32-unknown-unknown/release/token-factory.wasm -o .artifact/is20-factory.wasm

        cargo run -p is20-token-canister --features export-api > .artifact/is20-token.did
        cargo run -p token-factory --features export-api > .artifact/is20-factory.did

    secrets:
      gh_token: ${{ secrets.GH_PKG_TOKEN }}
      gh_login: ${{ secrets.GH_PKG_LOGIN }}


  codecov:
    if: ${{ github.ref_type != 'tag' }}
    needs: [build-test]
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: "Getting artifact"
      uses: actions/download-artifact@v3
      with:
        name: artifact-is20
        path: ./.artifact
    - uses: codecov/codecov-action@v3
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        files: .artifact/lcov.info
        verbose: true


  release:
    if: ${{github.ref_type == 'tag'}}
    needs: [build-test]
    runs-on: ubuntu-latest

    steps:
    - name: "Getting artifact"
      uses: actions/download-artifact@v3
      with:
        name: artifact-is20
        path: ./.artifact
    - name: "Compress"
      run: |
        rm -f .artifact/lcov.info
        cd .artifact
        tar -czf ../is20-${{ github.ref_name }}.tar.gz --owner=0 --group=0 --no-same-owner --no-same-permissions .
    - name: Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          ./*.tar.gz
